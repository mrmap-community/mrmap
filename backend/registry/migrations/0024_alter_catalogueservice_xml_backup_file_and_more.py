# Generated by Django 5.1.7 on 2025-07-03 12:51

import django.db.models.deletion
import registry.models.document
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('django_celery_beat', '0019_alter_periodictasks_options'),
        ('registry', '0023_alter_harvestingjob_max_step_size_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='catalogueservice',
            name='xml_backup_file',
            field=models.FileField(editable=False, help_text='the original xml as backup to restore the xml field.', upload_to=registry.models.document.xml_backup_file_path, verbose_name='xml backup'),
        ),
        migrations.AlterField(
            model_name='datasetmetadatarecord',
            name='xml_backup_file',
            field=models.FileField(editable=False, help_text='the original xml as backup to restore the xml field.', upload_to=registry.models.document.xml_backup_file_path, verbose_name='xml backup'),
        ),
        migrations.AlterField(
            model_name='featuretype',
            name='xml_backup_file',
            field=models.FileField(editable=False, help_text='the original xml as backup to restore the xml field.', upload_to=registry.models.document.xml_backup_file_path, verbose_name='xml backup'),
        ),
        migrations.AlterField(
            model_name='historicalcatalogueservice',
            name='xml_backup_file',
            field=models.TextField(editable=False, help_text='the original xml as backup to restore the xml field.', max_length=100, verbose_name='xml backup'),
        ),
        migrations.AlterField(
            model_name='historicaldatasetmetadatarecord',
            name='xml_backup_file',
            field=models.TextField(editable=False, help_text='the original xml as backup to restore the xml field.', max_length=100, verbose_name='xml backup'),
        ),
        migrations.AlterField(
            model_name='historicalfeaturetype',
            name='xml_backup_file',
            field=models.TextField(editable=False, help_text='the original xml as backup to restore the xml field.', max_length=100, verbose_name='xml backup'),
        ),
        migrations.AlterField(
            model_name='historicallayer',
            name='xml_backup_file',
            field=models.TextField(editable=False, help_text='the original xml as backup to restore the xml field.', max_length=100, verbose_name='xml backup'),
        ),
        migrations.AlterField(
            model_name='historicalservicemetadatarecord',
            name='xml_backup_file',
            field=models.TextField(editable=False, help_text='the original xml as backup to restore the xml field.', max_length=100, verbose_name='xml backup'),
        ),
        migrations.AlterField(
            model_name='historicalwebfeatureservice',
            name='xml_backup_file',
            field=models.TextField(editable=False, help_text='the original xml as backup to restore the xml field.', max_length=100, verbose_name='xml backup'),
        ),
        migrations.AlterField(
            model_name='historicalwebmapservice',
            name='xml_backup_file',
            field=models.TextField(editable=False, help_text='the original xml as backup to restore the xml field.', max_length=100, verbose_name='xml backup'),
        ),
        migrations.AlterField(
            model_name='layer',
            name='xml_backup_file',
            field=models.FileField(editable=False, help_text='the original xml as backup to restore the xml field.', upload_to=registry.models.document.xml_backup_file_path, verbose_name='xml backup'),
        ),
        migrations.AlterField(
            model_name='servicemetadatarecord',
            name='xml_backup_file',
            field=models.FileField(editable=False, help_text='the original xml as backup to restore the xml field.', upload_to=registry.models.document.xml_backup_file_path, verbose_name='xml backup'),
        ),
        migrations.AlterField(
            model_name='webfeatureservice',
            name='xml_backup_file',
            field=models.FileField(editable=False, help_text='the original xml as backup to restore the xml field.', upload_to=registry.models.document.xml_backup_file_path, verbose_name='xml backup'),
        ),
        migrations.AlterField(
            model_name='webmapservice',
            name='xml_backup_file',
            field=models.FileField(editable=False, help_text='the original xml as backup to restore the xml field.', upload_to=registry.models.document.xml_backup_file_path, verbose_name='xml backup'),
        ),
        migrations.CreateModel(
            name='PeriodicHarvestingJob',
            fields=[
                ('periodictask_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='django_celery_beat.periodictask')),
                ('service', models.ForeignKey(help_text='this is the service which shall be harvested', on_delete=django.db.models.deletion.CASCADE, related_name='catalogue_service_periodic_harvesting_jobs', related_query_name='catalogue_service_periodic_harvesting_job', to='registry.catalogueservice', verbose_name='catalogue service')),
            ],
            options={
                'verbose_name': 'Periodic Harvesting Job',
                'verbose_name_plural': 'Periodic Harvesting Jobs',
            },
            bases=('django_celery_beat.periodictask',),
        ),
    ]
