# Generated by Django 5.2.4 on 2025-09-04 08:28

from django.db import migrations, models


def set_my_defaults(apps, schema_editor):
    HarvestedMetadataRelation = apps.get_model(
        'registry', 'HarvestedMetadataRelation')
    objs = []

    for harvestedMetadataRelation in HarvestedMetadataRelation.objects.select_related('harvesting_job').all().iterator():
        harvestedMetadataRelation.history_date = harvestedMetadataRelation.harvesting_job.date_created
        objs.append(harvestedMetadataRelation)
    HarvestedMetadataRelation.objects.bulk_update(objs, ["history_date"])


def reverse_func(apps, schema_editor):
    pass  # code for reverting migration, if any


class Migration(migrations.Migration):

    dependencies = [
        ('registry', '0027_historicalcatalogueservice_history_day_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='harvestedmetadatarelation',
            name='history_date',
            field=models.DateTimeField(
                blank=True, help_text='Datetime field when the relation was created', null=True, verbose_name='Created DateTime'),
        ),
        migrations.RunPython(set_my_defaults, reverse_func),
        migrations.AlterField(
            model_name='harvestedmetadatarelation',
            name='history_date',
            field=models.DateTimeField(
                auto_now_add=True, help_text='Datetime field when the relation was created', verbose_name='Created DateTime'),
        ),
        migrations.AddField(
            model_name='harvestedmetadatarelation',
            name='history_day',
            field=models.GeneratedField(db_index=True, db_persist=True, expression=models.Func(models.F('history_date'), function='TIMEZONE', output_field=models.DateField(
            ), template="(%(function)s('EUROPE/BERLIN', %(expressions)s))::date"), output_field=models.DateField()),
        ),
        migrations.AddField(
            model_name='harvestedmetadatarelation',
            name='history_month',
            field=models.GeneratedField(db_index=True, db_persist=True, expression=models.Func(models.F('history_date'), function='EXTRACT', output_field=models.IntegerField(
            ), template="EXTRACT(MONTH FROM (TIMEZONE('EUROPE/BERLIN', %(expressions)s)))"), output_field=models.IntegerField()),
        ),
        migrations.AddField(
            model_name='harvestedmetadatarelation',
            name='history_week',
            field=models.GeneratedField(db_index=True, db_persist=True, expression=models.Func(models.F('history_date'), function='EXTRACT', output_field=models.IntegerField(
            ), template="EXTRACT(WEEK FROM (TIMEZONE('EUROPE/BERLIN', %(expressions)s)))"), output_field=models.IntegerField()),
        ),
        migrations.AddField(
            model_name='harvestedmetadatarelation',
            name='history_year',
            field=models.GeneratedField(db_index=True, db_persist=True, expression=models.Func(models.F('history_date'), function='EXTRACT', output_field=models.IntegerField(
            ), template="EXTRACT(YEAR FROM (TIMEZONE('EUROPE/BERLIN', %(expressions)s)))"), output_field=models.IntegerField()),
        ),
    ]
